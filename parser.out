Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Query
Rule 1     Query -> SFW
Rule 2     Query -> SF
Rule 3     SFW -> SELECT SelList FROM FromList WHERE Cond
Rule 4     SF -> SELECT SelList FROM FromList
Rule 5     SelList -> TCNAME COMMA SelList
Rule 6     SelList -> TCNAME
Rule 7     SelList -> WILDCARD
Rule 8     FromList -> TCNAME COMMA FromList
Rule 9     FromList -> TCNAME
Rule 10    Cond -> Expression
Rule 11    Cond -> Expression AND Expression
Rule 12    Expression -> TCNAME EQX CONSTANT
Rule 13    Expression -> TCNAME EQX STRING
Rule 14    Expression -> TCNAME EQX BOOL

Terminals, with rules where they appear

AND                  : 11
BOOL                 : 14
COMMA                : 5 8
CONSTANT             : 12
EQX                  : 12 13 14
FROM                 : 3 4
SELECT               : 3 4
STRING               : 13
TCNAME               : 5 6 8 9 12 13 14
WHERE                : 3
WILDCARD             : 7
error                : 

Nonterminals, with rules where they appear

Cond                 : 3
Expression           : 10 11 11
FromList             : 3 4 8
Query                : 0
SF                   : 2
SFW                  : 1
SelList              : 3 4 5

Parsing method: LALR

state 0

    (0) S' -> . Query
    (1) Query -> . SFW
    (2) Query -> . SF
    (3) SFW -> . SELECT SelList FROM FromList WHERE Cond
    (4) SF -> . SELECT SelList FROM FromList

    SELECT          shift and go to state 4

    Query                          shift and go to state 1
    SFW                            shift and go to state 2
    SF                             shift and go to state 3

state 1

    (0) S' -> Query .



state 2

    (1) Query -> SFW .

    $end            reduce using rule 1 (Query -> SFW .)


state 3

    (2) Query -> SF .

    $end            reduce using rule 2 (Query -> SF .)


state 4

    (3) SFW -> SELECT . SelList FROM FromList WHERE Cond
    (4) SF -> SELECT . SelList FROM FromList
    (5) SelList -> . TCNAME COMMA SelList
    (6) SelList -> . TCNAME
    (7) SelList -> . WILDCARD

    TCNAME          shift and go to state 6
    WILDCARD        shift and go to state 7

    SelList                        shift and go to state 5

state 5

    (3) SFW -> SELECT SelList . FROM FromList WHERE Cond
    (4) SF -> SELECT SelList . FROM FromList

    FROM            shift and go to state 8


state 6

    (5) SelList -> TCNAME . COMMA SelList
    (6) SelList -> TCNAME .

    COMMA           shift and go to state 9
    FROM            reduce using rule 6 (SelList -> TCNAME .)


state 7

    (7) SelList -> WILDCARD .

    FROM            reduce using rule 7 (SelList -> WILDCARD .)


state 8

    (3) SFW -> SELECT SelList FROM . FromList WHERE Cond
    (4) SF -> SELECT SelList FROM . FromList
    (8) FromList -> . TCNAME COMMA FromList
    (9) FromList -> . TCNAME

    TCNAME          shift and go to state 11

    FromList                       shift and go to state 10

state 9

    (5) SelList -> TCNAME COMMA . SelList
    (5) SelList -> . TCNAME COMMA SelList
    (6) SelList -> . TCNAME
    (7) SelList -> . WILDCARD

    TCNAME          shift and go to state 6
    WILDCARD        shift and go to state 7

    SelList                        shift and go to state 12

state 10

    (3) SFW -> SELECT SelList FROM FromList . WHERE Cond
    (4) SF -> SELECT SelList FROM FromList .

    WHERE           shift and go to state 13
    $end            reduce using rule 4 (SF -> SELECT SelList FROM FromList .)


state 11

    (8) FromList -> TCNAME . COMMA FromList
    (9) FromList -> TCNAME .

    COMMA           shift and go to state 14
    WHERE           reduce using rule 9 (FromList -> TCNAME .)
    $end            reduce using rule 9 (FromList -> TCNAME .)


state 12

    (5) SelList -> TCNAME COMMA SelList .

    FROM            reduce using rule 5 (SelList -> TCNAME COMMA SelList .)


state 13

    (3) SFW -> SELECT SelList FROM FromList WHERE . Cond
    (10) Cond -> . Expression
    (11) Cond -> . Expression AND Expression
    (12) Expression -> . TCNAME EQX CONSTANT
    (13) Expression -> . TCNAME EQX STRING
    (14) Expression -> . TCNAME EQX BOOL

    TCNAME          shift and go to state 17

    Cond                           shift and go to state 15
    Expression                     shift and go to state 16

state 14

    (8) FromList -> TCNAME COMMA . FromList
    (8) FromList -> . TCNAME COMMA FromList
    (9) FromList -> . TCNAME

    TCNAME          shift and go to state 11

    FromList                       shift and go to state 18

state 15

    (3) SFW -> SELECT SelList FROM FromList WHERE Cond .

    $end            reduce using rule 3 (SFW -> SELECT SelList FROM FromList WHERE Cond .)


state 16

    (10) Cond -> Expression .
    (11) Cond -> Expression . AND Expression

    $end            reduce using rule 10 (Cond -> Expression .)
    AND             shift and go to state 19


state 17

    (12) Expression -> TCNAME . EQX CONSTANT
    (13) Expression -> TCNAME . EQX STRING
    (14) Expression -> TCNAME . EQX BOOL

    EQX             shift and go to state 20


state 18

    (8) FromList -> TCNAME COMMA FromList .

    WHERE           reduce using rule 8 (FromList -> TCNAME COMMA FromList .)
    $end            reduce using rule 8 (FromList -> TCNAME COMMA FromList .)


state 19

    (11) Cond -> Expression AND . Expression
    (12) Expression -> . TCNAME EQX CONSTANT
    (13) Expression -> . TCNAME EQX STRING
    (14) Expression -> . TCNAME EQX BOOL

    TCNAME          shift and go to state 17

    Expression                     shift and go to state 21

state 20

    (12) Expression -> TCNAME EQX . CONSTANT
    (13) Expression -> TCNAME EQX . STRING
    (14) Expression -> TCNAME EQX . BOOL

    CONSTANT        shift and go to state 22
    STRING          shift and go to state 23
    BOOL            shift and go to state 24


state 21

    (11) Cond -> Expression AND Expression .

    $end            reduce using rule 11 (Cond -> Expression AND Expression .)


state 22

    (12) Expression -> TCNAME EQX CONSTANT .

    AND             reduce using rule 12 (Expression -> TCNAME EQX CONSTANT .)
    $end            reduce using rule 12 (Expression -> TCNAME EQX CONSTANT .)


state 23

    (13) Expression -> TCNAME EQX STRING .

    AND             reduce using rule 13 (Expression -> TCNAME EQX STRING .)
    $end            reduce using rule 13 (Expression -> TCNAME EQX STRING .)


state 24

    (14) Expression -> TCNAME EQX BOOL .

    AND             reduce using rule 14 (Expression -> TCNAME EQX BOOL .)
    $end            reduce using rule 14 (Expression -> TCNAME EQX BOOL .)

